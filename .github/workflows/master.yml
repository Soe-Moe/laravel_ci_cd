name: Deploy

on:
  push:
    branches: [master]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Environment variables available to all jobs
    env:
      PROJECT_PATH: /var/www/laravel_ci_cd
      COMPOSER_VERSION: 2.7.1
      PHP_VERSION: 8.1
      DB_DATABASE: laravel_ci_cd
      DB_ALLOW_EMPTY_PASSWORD: yes
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ""

    # Services to be run as part of the job
    services:
      # MySQL Service for Database Testing
      mysql:
        image: mysql:8.2 # Mysql Docker Image Version
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: ${{ env.DB_DATABASE }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      # Directory Permissions for Laravel
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # Create View & Session Directory for Laravel
      - name: Create View & Session Directory
        run: mkdir -p storage/framework/{views,sessions,cache}

      # Install PHP and require dependencies
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      # Install Composer Dependencies
      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist

      # Copy .env.example to .env
      - name: Copy .env.example to .env
        run: cp .env.example .env

      # Generate the Application Key
      - name: Generate Application Key
        run: php artisan key:generate

      # Clear Application Cache
      - name: Application Cache Clear
        run: |
          php artisan config:clear
          php artisan config:cache

      # Run Unit and Feature Tests
      - name: Run Unit & Feature tests
        env:
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          php artisan test
          test_result=$?
          if [ $test_result -ne 0 ]; then
            echo "Tests failed. Exiting..."
            exit $test_result
          fi

      # Deploy to Server using SSH
      - name: Deploy using ssh
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ env.PROJECT_PATH }}
            git pull origin master
            composer update
            php artisan migrate
            php artisan optimize:clear
